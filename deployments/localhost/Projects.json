{
  "address": "0xa513E6E4b8f2a923D98304ec87F64353C4D5C853",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "newProject",
          "type": "string"
        }
      ],
      "name": "ProjectStored",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "toStore",
          "type": "string"
        }
      ],
      "name": "addProject",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getProjects",
      "outputs": [
        {
          "internalType": "string[]",
          "name": "",
          "type": "string[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x7393a5ee64b848baf122f0d285c83736bac3dc742af85cb39815ae89eba2c2be",
  "receipt": {
    "to": null,
    "from": "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266",
    "contractAddress": "0xa513E6E4b8f2a923D98304ec87F64353C4D5C853",
    "transactionIndex": 0,
    "gasUsed": "463342",
    "logsBloom": "0x
    "blockHash": "0x838ff077a8ae453c1ef47107fe28e26edca6555901badce2ef60c638976dcd09",
    "transactionHash": "0x7393a5ee64b848baf122f0d285c83736bac3dc742af85cb39815ae89eba2c2be",
    "logs": [
      {
        "transactionIndex": 0,
        "blockNumber": 8,
        "transactionHash": "0x7393a5ee64b848baf122f0d285c83736bac3dc742af85cb39815ae89eba2c2be",
        "address": "0xa513E6E4b8f2a923D98304ec87F64353C4D5C853",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x000000000000000000000000f39fd6e51aad88f6f4ce6ab8827279cfffb92266"
        ],
        "data": "0x",
        "logIndex": 0,
        "blockHash": "0x838ff077a8ae453c1ef47107fe28e26edca6555901badce2ef60c638976dcd09"
      }
    ],
    "blockNumber": 8,
    "cumulativeGasUsed": "463342",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 1,
  "solcInputHash": "d937df3e0e98545fc101ee7616d52db1",
  "metadata": "{\"compiler\":{\"version\":\"0.8.8+commit.dddeac2f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"newProject\",\"type\":\"string\"}],\"name\":\"ProjectStored\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toStore\",\"type\":\"string\"}],\"name\":\"addProject\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getProjects\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Projects.sol\":\"Projects\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0x24e0364e503a9bbde94c715d26573a76f14cd2a202d45f96f52134ab806b67b9\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"},\"contracts/Projects.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\n\\r\\npragma solidity ^0.8.8;\\r\\n\\r\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\r\\n\\r\\ncontract Projects is Ownable {\\r\\n    string[] private s_projects;\\r\\n\\r\\n    event ProjectStored(string newProject);\\r\\n\\r\\n    function addProject(string memory toStore) public onlyOwner {\\r\\n        s_projects.push(toStore);\\r\\n        emit ProjectStored(toStore);\\r\\n    }\\r\\n\\r\\n    function getProjects() public view returns (string[] memory) {\\r\\n        return s_projects;\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0x25c0412407eaf7107bba009f5f837151a3612a2b83799de12ab7c731a77fa02a\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b5061001a3361001f565b61006f565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6106f98061007e6000396000f3fe608060405234801561001057600080fd5b50600436106100675760003560e01c80638da5cb5b116100505780638da5cb5b14610089578063dcc60128146100a9578063f2fde38b146100be57600080fd5b80630ed047d41461006c578063715018a614610081575b600080fd5b61007f61007a3660046104e5565b6100d1565b005b61007f6101ad565b6000546040516001600160a01b0390911681526020015b60405180910390f35b6100b1610213565b6040516100a091906105e3565b61007f6100cc366004610645565b6102ec565b6000546001600160a01b031633146101305760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064015b60405180910390fd5b6001805480820182556000919091528151610172917fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf601906020840190610436565b507fd75f2daf09f6de3f8db349ae301adc1b101e8b7f7c1670b529f1bfbe48aac552816040516101a29190610675565b60405180910390a150565b6000546001600160a01b031633146102075760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610127565b61021160006103ce565b565b60606001805480602002602001604051908101604052809291908181526020016000905b828210156102e357838290600052602060002001805461025690610688565b80601f016020809104026020016040519081016040528092919081815260200182805461028290610688565b80156102cf5780601f106102a4576101008083540402835291602001916102cf565b820191906000526020600020905b8154815290600101906020018083116102b257829003601f168201915b505050505081526020019060010190610237565b50505050905090565b6000546001600160a01b031633146103465760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610127565b6001600160a01b0381166103c25760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f64647265737300000000000000000000000000000000000000000000000000006064820152608401610127565b6103cb816103ce565b50565b600080546001600160a01b038381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b82805461044290610688565b90600052602060002090601f01602090048101928261046457600085556104aa565b82601f1061047d57805160ff19168380011785556104aa565b828001600101855582156104aa579182015b828111156104aa57825182559160200191906001019061048f565b506104b69291506104ba565b5090565b5b808211156104b657600081556001016104bb565b634e487b7160e01b600052604160045260246000fd5b6000602082840312156104f757600080fd5b813567ffffffffffffffff8082111561050f57600080fd5b818401915084601f83011261052357600080fd5b813581811115610535576105356104cf565b604051601f8201601f19908116603f0116810190838211818310171561055d5761055d6104cf565b8160405282815287602084870101111561057657600080fd5b826020860160208301376000928101602001929092525095945050505050565b6000815180845260005b818110156105bc576020818501810151868301820152016105a0565b818111156105ce576000602083870101525b50601f01601f19169290920160200192915050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b8281101561063857603f19888603018452610626858351610596565b9450928501929085019060010161060a565b5092979650505050505050565b60006020828403121561065757600080fd5b81356001600160a01b038116811461066e57600080fd5b9392505050565b60208152600061066e6020830184610596565b600181811c9082168061069c57607f821691505b602082108114156106bd57634e487b7160e01b600052602260045260246000fd5b5091905056fea2646970667358221220f492e40d389784982aeadb6e48de9ee9cc3f32b807425223a929f4f7ef6563ab64736f6c63430008080033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100675760003560e01c80638da5cb5b116100505780638da5cb5b14610089578063dcc60128146100a9578063f2fde38b146100be57600080fd5b80630ed047d41461006c578063715018a614610081575b600080fd5b61007f61007a3660046104e5565b6100d1565b005b61007f6101ad565b6000546040516001600160a01b0390911681526020015b60405180910390f35b6100b1610213565b6040516100a091906105e3565b61007f6100cc366004610645565b6102ec565b6000546001600160a01b031633146101305760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064015b60405180910390fd5b6001805480820182556000919091528151610172917fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf601906020840190610436565b507fd75f2daf09f6de3f8db349ae301adc1b101e8b7f7c1670b529f1bfbe48aac552816040516101a29190610675565b60405180910390a150565b6000546001600160a01b031633146102075760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610127565b61021160006103ce565b565b60606001805480602002602001604051908101604052809291908181526020016000905b828210156102e357838290600052602060002001805461025690610688565b80601f016020809104026020016040519081016040528092919081815260200182805461028290610688565b80156102cf5780601f106102a4576101008083540402835291602001916102cf565b820191906000526020600020905b8154815290600101906020018083116102b257829003601f168201915b505050505081526020019060010190610237565b50505050905090565b6000546001600160a01b031633146103465760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610127565b6001600160a01b0381166103c25760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f64647265737300000000000000000000000000000000000000000000000000006064820152608401610127565b6103cb816103ce565b50565b600080546001600160a01b038381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b82805461044290610688565b90600052602060002090601f01602090048101928261046457600085556104aa565b82601f1061047d57805160ff19168380011785556104aa565b828001600101855582156104aa579182015b828111156104aa57825182559160200191906001019061048f565b506104b69291506104ba565b5090565b5b808211156104b657600081556001016104bb565b634e487b7160e01b600052604160045260246000fd5b6000602082840312156104f757600080fd5b813567ffffffffffffffff8082111561050f57600080fd5b818401915084601f83011261052357600080fd5b813581811115610535576105356104cf565b604051601f8201601f19908116603f0116810190838211818310171561055d5761055d6104cf565b8160405282815287602084870101111561057657600080fd5b826020860160208301376000928101602001929092525095945050505050565b6000815180845260005b818110156105bc576020818501810151868301820152016105a0565b818111156105ce576000602083870101525b50601f01601f19169290920160200192915050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b8281101561063857603f19888603018452610626858351610596565b9450928501929085019060010161060a565b5092979650505050505050565b60006020828403121561065757600080fd5b81356001600160a01b038116811461066e57600080fd5b9392505050565b60208152600061066e6020830184610596565b600181811c9082168061069c57607f821691505b602082108114156106bd57634e487b7160e01b600052602260045260246000fd5b5091905056fea2646970667358221220f492e40d389784982aeadb6e48de9ee9cc3f32b807425223a929f4f7ef6563ab64736f6c63430008080033",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 400,
        "contract": "contracts/Projects.sol:Projects",
        "label": "_owner",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 7940,
        "contract": "contracts/Projects.sol:Projects",
        "label": "s_projects",
        "offset": 0,
        "slot": "1",
        "type": "t_array(t_string_storage)dyn_storage"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_string_storage)dyn_storage": {
        "base": "t_string_storage",
        "encoding": "dynamic_array",
        "label": "string[]",
        "numberOfBytes": "32"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      }
    }
  }
}